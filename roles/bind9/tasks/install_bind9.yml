- name: Update apt and install Bind9
  apt:
    name: bind9
    update_cache: yes

- name: Create zone
  template:
    src: db.template.j2
    dest: "{{ bind9_config_dir }}/db.{{ domain }}"

- name: Create reverse zone
  template:
    src: db.reverse.j2
    dest: "{{ bind9_config_dir }}/db.{{ reverse_zone }}"

- name: Create named.conf.local
  template:
    src: named.conf.local.j2
    dest: "{{ bind9_config_dir }}/named.conf.local"

- name: Create named.conf.options
  template:
    src: named.conf.options.j2
    dest: "{{ bind9_config_dir }}/named.conf.options"

- name: Create zones.rfc1918
  template:
    src: zones.rfc1918.j2
    dest: "{{ bind9_config_dir }}/zones.rfc1918"

- name: Create /etc/hosts
  template:
    src: hosts.j2
    dest: "/etc/hosts"
  when: false
  
- name: Enable bind9
  systemd:
    name: bind9
    state: restarted
    enabled: yes

- name: Copy script backup and logrotate
  copy: 
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
  with_items:
    - { src: "{{ role_path }}/files/bind_backup", dest: "/usr/local/bin/bind_backup", mode: "0755" }
    - { src: "{{ role_path }}/files/bind_restore", dest: "/usr/local/bin/bind_restore", mode: "0755" }
    - { src: "{{ role_path }}/files/logrotate_bind_backup", dest: "/etc/logrotate.d/logrotate_bind_backup", mode: "0655" }

- name: Configure cron for bind_backup
  cron:
    name: "ansible_bind_backup"
    user: root
    cron_file: "ansible_bind_backup"
    minute: "{{ backup_minute }}"
    hour: "{{ backup_hour }}"
    job: "/usr/local/bin/bind_backup {{ backup_days_to_delete }} >> /var/log/bind_backup.log"
