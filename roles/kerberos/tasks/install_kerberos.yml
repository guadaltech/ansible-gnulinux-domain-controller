- name: Update apt and install Kerberos
  apt:
    name: "{{ packages }}"
    update_cache: yes
  vars:
    packages:
    - krb5-kdc
    - krb5-admin-server
    - krb5-kdc-ldap
    - krb5-config
    - ldap-utils
    - krb5-user

- name: Copy KDC configuration file
  template:
    src: kdc.conf.j2
    dest: "{{ kdc_conf_path }}"
  notify:
   - restart kerberos

- name: Copy KDC ACL configuration file
  template:
    src: kadm5.acl.j2
    dest: "{{ kadm5_acl_path }}"
  notify:
   - restart kerberos

- name: Copy client configuration file
  template:
    src: krb5.conf.j2
    dest: /etc/krb5.conf

- name: Check Kerberos database
  shell: ls /etc/krb5kdc/principal
  register: motd_contents
  ignore_errors: yes

- name: Create initial Kerberos database
  shell: kdb5_util -P {{ master_db_pass }} create -s
  when: motd_contents.stdout.find('/etc/krb5kdc/principal') != 0
  ignore_errors: yes

- name: Start Kerberos units
  systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items: "{{ units }}"

- name: Create an admin for administering Kerberos server
  shell: kadmin.local -q "addprinc -pw {{ kadmin_pass }} {{ kadmin_user }}/admin"

- name: Create default password policy
  shell: kadmin.local -q "add_policy -maxlife \"{{ maxlife }}\" -minlife \"{{ minlife }}\" -minlength {{ minlength }} -minclasses {{ minclasses }} -history {{ history }} -maxfailure {{ maxfailure }} -failurecountinterval \"{{ failurecountinterval }}\" -lockoutduration \"{{ lockoutduration }}\" {{ policy_name }}"

- name: Copy blksmanager, script backup and logrotate
  copy: 
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
  with_items:
    - { src: "{{ role_path }}/files/blksmanager", dest: "/usr/local/bin/blksmanager", mode: "0755" }
    - { src: "{{ role_path }}/files/kerberos_backup", dest: "/usr/local/bin/kerberos_backup", mode: "0755" }
    - { src: "{{ role_path }}/files/logrotate_kerberos_backup", dest: "/etc/logrotate.d/logrotate_kerberos_backup", mode: "0655" }

- name: Configure cron for kerberos_backup
  cron:
    name: ansible_kerberos_backup
    user: root
    cron_file: ansible_kerberos_backup
    minute: "0"
    hour: "2"
    job: "/usr/local/bin/kerberos_backup >> /var/log/kerberos_backup.log"
